name: Terraform apply

on:
  workflow_call:
    inputs:
      account-id:
        required: true
        type: string
      aws-role-name:
        required: true
        type: string
      aws-region:
        required: false
        type: string
        default: us-east-1
      environment:
        required: true
        type: string
      terraform-version:
        required: false
        type: string
        default: 1.10.0
      use-secrets:
        required: false
        type: boolean
        default: false
    secrets:
      terraform-secrets:
        description: 'JSON object with terraform variables and their secret values from calling workflow'
        required: false

jobs:
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      id-token: write
      contents: read
    steps:

      - name: Setup Git access to private modules
        run: |
          git config --global url."https://${{ secrets.GH_READONLY_TOKEN }}@github.com/".insteadOf "https://github.com/"
        
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        id: creds
        with:
          role-to-assume: arn:aws:iam::${{ inputs.account-id }}:role/${{ inputs.aws-role-name }}
          aws-region: ${{ inputs.aws-region }}
          role-session-name: gha-tf-${{ github.actor }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform-version }}
      
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Generate Terraform Variables from Secrets
        if: inputs.use-secrets == true
        run: |
          SECRETS_FILE="env/secrets-${{ inputs.environment }}.tfvars"
          SECRETS_JSON='${{ secrets.terraform-secrets }}'
          
          echo "" > $SECRETS_FILE

          if ! echo "$SECRETS_JSON" | jq . >/dev/null 2>&1; then
            echo "❌ Error: terraform-secrets is not valid JSON"
            exit 1
          fi
          
          # Extraer cada par clave-valor del JSON
          echo "$SECRETS_JSON" | jq -r 'to_entries[] | "\(.key)=\(.value)"' | while IFS='=' read -r tf_var_name secret_value; do
            if [[ -n "$secret_value" && "$secret_value" != "null" ]]; then
              echo "$tf_var_name = \"$secret_value\"" >> $SECRETS_FILE
            else
              echo "⚠️ Warning: $tf_var_name has empty or null value"
            fi
          done

      - name: Merge var files
        if: inputs.use-secrets == true
        run: cat env/secrets-${{ inputs.environment }}.tfvars >> env/${{ inputs.environment }}.tfvars
      
      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend/${{ inputs.environment }}.conf
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform apply 
        id: apply
        run: terraform apply -auto-approve -var-file env/${{ inputs.environment }}.tfvars
