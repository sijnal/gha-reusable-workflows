name: Terraform apply

on:
  workflow_call:
    inputs:
      account-id:
        required: true
        type: string
      aws-role-name:
        required: true
        type: string
      aws-region:
        required: false
        type: string
        default: us-east-1
      environment:
        required: true
        type: string
      terraform-version:
        required: false
        type: string
        default: 1.10.0

jobs:
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      # PASO DE DEBUG - Verificar variables antes de AWS
      - name: Debug - Verificar variables de entorno
        run: |
          echo "=== Variables de entorno disponibles ==="
          echo "TF_VAR_ENVIRONMENT: ${{ vars.TF_VAR_ENVIRONMENT }}"
          echo "TF_VAR_PROJECT_NAME: ${{ vars.TF_VAR_PROJECT_NAME }}"
          echo "TF_VAR_RDS_PASSWORD está definido: ${{ secrets.TF_VAR_RDS_PASSWORD != '' }}"
          echo ""
          echo "=== Todas las variables de entorno ==="
          env | grep TF_VAR || echo "No hay variables TF_VAR"
          echo ""
          echo "=== Variables de GitHub ==="
          echo "GITHUB_VARS: ${{ toJSON(vars) }}"
          echo ""
          echo "=== Contenido del archivo tfvars ==="
          cat env/${{ inputs.environment }}.tfvars || echo "Archivo no encontrado"

      - uses: aws-actions/configure-aws-credentials@v4
        id: creds
        with:
          role-to-assume: arn:aws:iam::${{ inputs.account-id }}:role/${{ inputs.aws-role-name }}
          aws-region: ${{ inputs.aws-region }}
          role-session-name: gha-tf-${{ github.actor }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform-version }}
      
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
      
      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend/${{ inputs.environment }}.conf
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

        # PASO CRÍTICO - Exportar variables de entorno
      - name: Exportar variables de entorno
        run: |
          echo "TF_VAR_ENVIRONMENT=${{ vars.TF_VAR_ENVIRONMENT }}" >> $GITHUB_ENV
          echo "TF_VAR_PROJECT_NAME=${{ vars.TF_VAR_PROJECT_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_RDS_PASSWORD=${{ secrets.TF_VAR_RDS_PASSWORD }}" >> $GITHUB_ENV
          echo "Variables exportadas:"
          env | grep TF_VAR
      
      # PASO DE DEBUG - Verificar variables después de exportar
      - name: Debug - Verificar variables después de exportar
        run: |
          echo "=== Variables de entorno después de exportar ==="
          env | grep TF_VAR
          echo ""
          echo "=== Plan de Terraform para verificar variables ==="
          terraform plan -var-file env/${{ inputs.environment }}.tfvars -detailed-exitcode || echo "Plan completado"
        
      - name: Terraform apply 
        id: apply
        env:
          TF_VAR_ENVIRONMENT: ${{ vars.TF_VAR_ENVIRONMENT }}
          TF_VAR_PROJECT_NAME: ${{ vars.TF_VAR_PROJECT_NAME }}
          TF_VAR_RDS_PASSWORD: ${{ secrets.TF_VAR_RDS_PASSWORD }}
        run: terraform apply -auto-approve -var-file env/${{ inputs.environment }}.tfvars
